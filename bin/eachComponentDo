#!/bin/bash
shopt -qs extglob nullglob

: ${EACHCOMPONENTDO_COMMAND_JOINER=;}
: ${EACHCOMPONENTDO_EXEC_END=;}

printUsage()
{
    cat <<HELPTEXT
Execute COMMAND on each COMPONENT-DIR, which is appended to COMMAND.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "-c|--command \"COMMANDLINE\" [-c ...] | --exec SIMPLECOMMAND [...] ${EACHCOMPONENTDO_EXEC_END} [--exec ...] | [--] COMPONENT-DIR [...] [-?|-h|--help]"
}

what='Listing'
commands=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--what)         shift; what="${1:?}"; shift;;
	--command|-c)	shift; commands+="${commands:+ $EACHCOMPONENTDO_COMMAND_JOINER }$1"; shift;;
	--exec)		shift
			cmd=
			while [ $# -gt 0 -a "$1" != "$EACHCOMPONENTDO_EXEC_END" ]
			do
			    printf -v quotedArg %q "$1"
			    cmd+="${cmd:+ }${quotedArg}"
			    shift
			done
			if [ $# -eq 0 ]; then
			    echo "ERROR: --exec command must be concluded with '${EACHCOMPONENTDO_EXEC_END}'"; echo; printUsage "$0"
			    exit 2
			fi >&2
			shift
			commands+="${commands:+ $EACHCOMPONENTDO_COMMAND_JOINER }${cmd}"
			;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

setupPythonVirtualEnv() {
    local projectDirspec="${1:?}"; shift
    local pyvenvDirspec="${projectDirspec}/.venv"
    local newEnv=
    if [ -z "$VIRTUAL_ENV" -a ! -d "$pyvenvDirspec" ]; then
	printf '\n%sSetting up Python virtual environment at %s:\n' "$EACHCOMPONENTDO_SETUP_PREFIX" "$pyvenvDirspec"
	python3 -m venv "$pyvenvDirspec" || return $?
	[ -z "$EACHCOMPONENTDO_SETUP_SUFFIX" ] || printf '%s\n' "$EACHCOMPONENTDO_SETUP_SUFFIX"
	newEnv=t
    fi
    if [ -z "$VIRTUAL_ENV" ]; then
	source "${pyvenvDirspec}/bin/activate" || return $?
    fi
    [ -n "$VIRTUAL_ENV" ] || return 1

    if [ "$newEnv" ]; then
	printf '\n%sInstalling requirements for %s:\n' "$EACHCOMPONENTDO_SETUP_PREFIX" "$(basename -- "$projectDirspec")"
	local requirementsFilespec="${projectDirspec}/requirements.txt"
	pip3 install --requirement "$requirementsFilespec" || return $?
	[ -z "$EACHCOMPONENTDO_SETUP_SUFFIX" ] || printf '%s\n' "$EACHCOMPONENTDO_SETUP_SUFFIX"
    fi
}

componentsPlural=s; [ $# -eq 1 ] && componentsPlural=
printf '%s %d component%s.\n' "$what" "$#" "$componentsPlural"
for dirspec
do
    dirspec="${dirspec%/}"
    ( # Note: Execute in subshell so that different Python virtual environments don't influence each other and we can skip the deactivation.
	if hasMatchingFile 'requirements.txt' "$dirspec"; then
	    setupPythonVirtualEnv "$dirspec"
	fi

	eval "${commands:-echo}" "$dirspec"
    ) || exit $?
done
printf '\n%s for %s%d component%s done.\n' "$what" "${componentsPlural:+all }" "$#" "$componentsPlural"
